version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # 4-node scylladb cluster
  scylladb-node1:
    image: scylladb/scylla:5.0.0
    restart: always
    container_name: scylladb-node1
    ports:
      - 9042:9042
    networks:
      - scylla-cluster
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    volumes:
      - scylladb-node1-data:/var/lib/scylla

  scylladb-node2:
    image: scylladb/scylla:5.0.0
    restart: always
    container_name: scylladb-node2
    ports:
      - 9043:9042
    command: --seeds=scylladb-node1,scylladb-node3
    networks:
      - scylla-cluster
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    depends_on:
      scylladb-node1:
        condition: service_healthy
    volumes:
      - scylladb-node2-data:/var/lib/scylla

  scylladb-node3:
    image: scylladb/scylla:5.0.0
    restart: always
    container_name: scylladb-node3
    ports:
      - 9044:9042
    command: --seeds=scylladb-node1
    networks:
      - scylla-cluster
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    depends_on:
      scylladb-node1:
        condition: service_healthy
      scylladb-node2:
        condition: service_started
    volumes:
      - scylladb-node3-data:/var/lib/scylla

  scylladb-node4:
    image: scylladb/scylla:5.0.0
    restart: always
    container_name: scylladb-node4
    ports:
      - 9045:9042
    command: --seeds=scylladb-node1
    networks:
      - scylla-cluster
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    depends_on:
      scylladb-node1:
        condition: service_healthy
      scylladb-node2:
        condition: service_started
      scylladb-node3:
        condition: service_started
    volumes:
      - scylladb-node4-data:/var/lib/scylla

volumes:
  scylladb-node1-data:
  scylladb-node2-data:
  scylladb-node3-data:
  scylladb-node4-data:


networks:
  scylla-cluster:
    driver: bridge
