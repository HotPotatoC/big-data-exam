version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # 4 Node scylla cluster - https://github.com/aldy505/local-scylladb-cluster/blob/master/docker-compose.yml
  scylla-node1:
    image: scylladb/scylla:5.1.0
    container_name: scylla-node1
    command: --listen-address=172.20.0.10 --smp=1
    ports:
      - 9042:9042
    networks:
      scylla_cluster:
        ipv4_address: 172.20.0.10
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 30s
      resources:
        limits:
          cpus: '4'
        reservations:
          cpus: '0.1'
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    volumes:
      - scylla-node1-data:/var/lib/scylla

  scylla-node2:
    image: scylladb/scylla:5.1.0
    container_name: scylla-node2
    command: --seeds=scylla-node1,scylla-node3,scylla-node4 --listen-address=172.20.0.11 --smp=1
    ports:
      - 9043:9042
    networks:
      scylla_cluster:
        ipv4_address: 172.20.0.11
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 30s
      resources:
        limits:
          cpus: '4'
        reservations:
          cpus: '0.1'
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    depends_on:
      scylla-node1:
        condition: service_healthy
    volumes:
      - scylla-node2-data:/var/lib/scylla

  scylla-node3:
    image: scylladb/scylla:5.1.0
    container_name: scylla-node3
    command: --seeds=scylla-node1 --listen-address=172.20.0.12 --smp=1
    ports:
      - 9044:9042
    networks:
      scylla_cluster:
        ipv4_address: 172.20.0.12
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 30s
      resources:
        limits:
          cpus: '4'
        reservations:
          cpus: '0.1'
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    depends_on:
      scylla-node1:
        condition: service_healthy
      scylla-node2:
        condition: service_started
    volumes:
      - scylla-node3-data:/var/lib/scylla

  scylla-node4:
    image: scylladb/scylla:5.1.0
    container_name: scylla-node4
    command: --seeds=scylla-node1 --listen-address=172.20.0.13 --smp=1
    ports:
      - 9045:9042
    networks:
      scylla_cluster:
        ipv4_address: 172.20.0.13
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 30s
      resources:
        limits:
          cpus: '4'
        reservations:
          cpus: '0.1'
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    depends_on:
      scylla-node1:
        condition: service_healthy
      scylla-node2:
        condition: service_started
    volumes:
      - scylla-node4-data:/var/lib/scylla

volumes:
  scylla-node1-data:
  scylla-node2-data:
  scylla-node3-data:
  scylla-node4-data:


networks:
  scylla_cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
